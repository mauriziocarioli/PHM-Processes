package com.health_insurance.phm_processes;

import org.kie.api.definition.type.*;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.io.Serializable;

/**
 * This class was automatically generated by the data modeler tool.
 */

public class Task implements Serializable {

	private static final long serialVersionUID = 198620188724996430L;

	@Label(value = "Task Id")
	@Description(value = "Numerical value identifying the task")
	private Integer id;
	@Description(value = "Alphanumeric code of the task.")
	@Label(value = "Orig Task Id")
	private String origId;
	@Label(value = "Status")
	@Description(value = "The lifecycle status of the task.")
	private String status;
	@Label(value = "Task Suppression.")
	@Description(value = "Task inactive/suppression flag.")
	private Boolean taskSuppression;
	@Label(value = "Task Suppression Period")
	@Description(value = "Task inactive/suppression period.")
	private String taskSuppressionPeriod;
	@Label(value = "Close")
	@Description(value = "The type of task close.")
	private String close;
	@Label(value = "Task Hard Close Actor")
	@Description(value = "Task hard close confirmation service url")
	private String taskHardCloseUrl;
	@Description("The frequency of the reminder as an ISO 8601 value.")
	@Label(value = "Reminder Frequency")
	private String reminderFrequency;
	@Description(value = "The timer setting for escalation as an ISO 8601 value.")
	@Label(value = "Escalation Timer")
	private String escalationTimer;

	public Task() {
	}

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getOrigId() {
		return this.origId;
	}

	public void setOrigId(String origId) {
		this.origId = origId;
	}

	public String getStatus() {
		return status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	public Boolean getTaskSuppression() {
		return taskSuppression;
	}

	public void setTaskSuppression(Boolean taskSuppression) {
		this.taskSuppression = taskSuppression;
	}

	public String getTaskSuppressionPeriod() {
		return taskSuppressionPeriod;
	}

	public void setTaskSuppressionPeriod(String taskSuppressionPeriod) {
		this.taskSuppressionPeriod = taskSuppressionPeriod;
	}

	public String getClose() {
		return close;
	}

	public void setClose(String close) {
		this.close = close;
	}

	public String getTaskHardCloseUrl() {
		return taskHardCloseUrl;
	}

	public void setTaskHardCloseUrl(String taskHardCloseUrl) {
		this.taskHardCloseUrl = taskHardCloseUrl;
	}

	public String getReminderFrequency() {
		return this.reminderFrequency;
	}

	public void setReminderFrequency(String reminderFrequency) {
		this.reminderFrequency = reminderFrequency;
	}

	public String getEscalationTimer() {
		return this.escalationTimer;
	}

	public void setEscalationTimer(String escalationTimer) {
		this.escalationTimer = escalationTimer;
	}

	@Override
	public String toString() {
		final ObjectMapper objectMapper = new ObjectMapper();
		try {
			return objectMapper.writeValueAsString(this);
		} catch (JsonProcessingException e) {
			e.printStackTrace();
		}
		return "";
	}

	public Task(Integer id, String origId, String status, Boolean taskSuppression, String taskSuppressionPeriod, String close, String taskHardCloseUrl, String reminderFrequency, String escalationTimer) {
		this.id = id;
		this.origId = origId;
		this.status = status;
		this.taskSuppression = taskSuppression;
		this.taskSuppressionPeriod = taskSuppressionPeriod;
		this.close = close;
		this.taskHardCloseUrl = taskHardCloseUrl;
		this.reminderFrequency = reminderFrequency;
		this.escalationTimer = escalationTimer;
	}

}